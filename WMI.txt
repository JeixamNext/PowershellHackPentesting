repositorio de informacion del sistema y rendimiento de la maquina

WMI explorer es un programa grafico que permite ver las clases y espacios de nombres de wmi

- Get-Help *WMI* (CIM son comandos mas comodos y modernos)

- Get-Command -Noun CIM*

- get-CimClass -namespace (tabula)

- Get-Wmiobject -Namespace root/cimv2 -List
(ver la lista de clases que hay contenida en ese espacio de nombres)

- Get-Wmiobject -Class Win32_BIOS
(ver dats de la bios)

- Get-Wmiobject -List

- Get-Wmiobject -class win32_Operatingsystem|FL *
(toda la info sobre el OS)

-Get-wmiObject -class win32_Process
(lista de todos los procesos en ejecucion)
- Get-Wmiobject -ComputerName pcremoto -Class Win32_Process
- Get-wmiObject -ComputerName pcremoto -Class win32_Process -Filter(Name=winlogon.exe
- Get-wmiObject -Query{Select * from win32_Process where Name=winlogon.exe
(query usa wsql muy parecido a sql)

- Get-wmiobject -class win32_Process -Filter[Name"notepad.exe"}|Remove-wmiobject
(cierra un proceso)

Metodos:

- Get-wmiObject -Class win32_Process -List
- Get-wmiobject -class win32_Process -List|Select-object -ExpandProperty Methods
- Invoke-wmiMethod -Class win32_Process -Name Create -ArgumentList"calc.exe"
(crea un proceso calculadora)

Objetos COM

regedit (editor del registro del sistema windows)
HKEY_CLASSS_ROOT
CSLID (aqui se encuentran los objetos COM)
(Es donde recurre el sistema para saber como tiene que actuar cuando ejecutamos una tarea)

Sin entorno grafico se accede:

Get-ChildItem REGISTRY::HKEY_CLASSES_ROOT\CLSID\ -Include PROGID -Recurse | Foreach {$_.GetValue("")}

- Get-ChildItem REGISTRY::HKEY_CLASSES_ROOT\CLSID\ -Include PROGID -Recurse | Foreach {$_.GetValue("")}|Where-Object{$_ -match "wscript"}
(busca uno concreto)

crear un objeto COM

- $OBJETOCOM=New-Object -ComObject Wscript.Shell.1
- $objetoCOM2=New-Object -comobject Shell.Application.1

$OBJETOCOM|Get-Member (permite ver metodos y propiedades de un objeto)

- $OBJETOCOM.Popup("hola esto es un objeto COM funcion Popup")
- $OBJETOCOM.SendKeys("escribe en consola")
- SOBJETOCOM.Exec(notepad.exe)

Registro de windows

Get-PSDrive (permite navegar por el registro entre otros)
cd HKCU: (entrar en el registro de usuarios para poder navegar por el)
Set-Location REGISTRY ::
(ver los registros que hay)
- New-PSDrive -Name Registro -PSProvider Registry -Root REGISTRY :: HKEY_CLASSES_ROOT
(crear tu propia carpeta de registro en get-PSDrive)
los comandos -item sirven para modificar cualquier parte de psdrive.
- Get-Command -Noun Item*
(ver los comnados tipo item)
- New-Item -Path HKCU:\Curso
(crea en HKCU la clave de registro (como si fuera una carpeta en regedit))
- New-ItemProperty -Path HKCU:\Curso\Pentest\ -Name Propiedad -PropertyType String -value "PowerShell"
(crea una propiedad en esa key)
- Rename-Item -Path HKCU:\Curso\-NewName CursoPowerShell
- Rename-ItemProperty -Path HKCU:\CursoPowerShell\Pentest\-Name Propiedad -NewName Propiedad2
- Set-ItemProperty -Path HKCU:\CursoPowerShell\Pentest\-Name Propiedad2 -value CursoPowerShell

Modificar registro en remoto
( formas)
-- Enter-PSSesion maquinaremota
-- invoke-command computerName maquinaremota -criptBlock {get-item -path ruta}
--- SREGISTRO=Get-wmiObject -List "StdRegProv"-ComputerName maquinaremota
--- SREGISTRO|Select-object -ExpandProperty Methods
--- SREGISTRO.GetStringvalue(2147483650,"Software\Microsoft Windows NT\CurrentVersion\","ProductName")
(con .net)
----[Microsoft.Win32.Registrykey].GetMethods()|more







